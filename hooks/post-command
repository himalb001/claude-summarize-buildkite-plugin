#!/bin/bash
set -uo pipefail

echo "--- :gear: Debug: Plugin environment variables"
env | grep "BUILDKITE_PLUGIN_CLAUDE_SUMMARIZE" || echo "No CLAUDE_SUMMARIZE plugin vars found"

echo "--- :gear: Debug: Buildkite environment"
echo "BUILDKITE_AGENT_ACCESS_TOKEN: ${BUILDKITE_AGENT_ACCESS_TOKEN:-NOT_SET}"
echo "BUILDKITE_BUILD_ID: ${BUILDKITE_BUILD_ID:-NOT_SET}"

# Get prompt from plugin config
AI_PROMPT=${BUILDKITE_PLUGIN_CLAUDE_SUMMARIZE_PROMPT}

echo "--- :gear: Debug: Configuration"
echo "PROMPT: '${AI_PROMPT}'"

echo "--- :robot_face: Calling Claude API"
echo "URL: http://agent.buildkite.localhost/v3/ai/claude/v1/messages"
echo "Payload: ${AI_PROMPT}"

# Create the JSON payload with properly escaped prompt
json_payload=$(jq -n \
  --arg prompt "$AI_PROMPT" \
  '{
    "model": "claude-3-opus-20240229",
    "max_tokens": 256,
    "stream": true,
    "messages": [
      {
        "role": "user",
        "content": $prompt
      }
    ]
  }')

# Make API call and capture response body
response_body=$(curl -s --location \
  -H "Authorization: Token $BUILDKITE_AGENT_ACCESS_TOKEN" \
  --data "$json_payload" \
  http://agent.buildkite.localhost/v3/ai/claude/v1/messages)

curl_exit_code=$?

echo "--- :gear: Debug: curl exit code: ${curl_exit_code}"

if [ $curl_exit_code -eq 0 ]; then
  echo "--- :white_check_mark: Claude response received"

  # Extract the text content from the JSON response
  claude_text=$(echo "$response_body" | jq -r '.content[0].text // empty')

  if [ -n "$claude_text" ] && [ "$claude_text" != "null" ]; then
    echo "--- :robot_face: Claude says:"
    echo "$claude_text"

    # Create annotation with the formatted text
    buildkite-agent annotate --style info --context claude-response --append "$claude_text"
  else
    echo "--- :warning: Could not extract text from Claude response"
    echo "Raw response: $response_body"
  fi
else
  echo "--- :x: Claude API call failed with exit code ${curl_exit_code}"
  exit 1
fi
